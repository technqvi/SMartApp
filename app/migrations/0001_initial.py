# Generated by Django 3.1 on 2021-05-16 10:20

import app.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch_name', models.CharField(max_length=255, verbose_name='Branch Name')),
                ('address', models.CharField(blank=True, max_length=500, null=True, verbose_name='Address')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Update At')),
            ],
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand_name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'ordering': ['brand_name'],
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255, unique=True, verbose_name='Company Name')),
                ('company_full_name', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='Company Full Name')),
                ('company_address', models.CharField(blank=True, max_length=500, null=True, verbose_name='Company Address')),
                ('company_telephone', models.CharField(blank=True, max_length=255, null=True, verbose_name='Company Telephone')),
                ('is_customer', models.BooleanField(default=True, verbose_name='Is Customer')),
                ('is_subcontractor', models.BooleanField(default=True, verbose_name='Is Sub Contractor')),
            ],
            options={
                'ordering': ['company_name'],
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(max_length=255, verbose_name='Customer Name')),
                ('customer_telephone', models.CharField(default='-', max_length=255, verbose_name='Customer Telephone')),
                ('customer_email', models.CharField(default='-', max_length=150, verbose_name='Customer Email')),
                ('is_active', models.BooleanField(default=True)),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Update At')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.company', verbose_name='Company')),
            ],
        ),
        migrations.CreateModel(
            name='DataCenter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datacenter_name', models.CharField(max_length=255, verbose_name='DataCenter Name')),
                ('address', models.CharField(blank=True, max_length=500, null=True, verbose_name='Address')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Update At')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.company')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.customer', verbose_name='Customer Support')),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_name', models.CharField(max_length=255, verbose_name='Engineer Name')),
                ('employee_nickname', models.CharField(blank=True, max_length=255, null=True, verbose_name='Employee Nickname')),
                ('employee_telephone', models.CharField(blank=True, max_length=255, null=True, verbose_name='Employee Telephone')),
                ('employee_email', models.EmailField(blank=True, max_length=150, null=True, verbose_name='Employee Email')),
                ('employee_position', models.CharField(blank=True, max_length=150, null=True, verbose_name='Employee Position')),
            ],
        ),
        migrations.CreateModel(
            name='Function',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('function_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Incident',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('incident_no', models.CharField(max_length=30, unique=True, verbose_name='Incident-No')),
                ('incident_datetime', models.DateTimeField(verbose_name='Incident-Date')),
                ('incident_reference_customer_caseNo', models.CharField(blank=True, max_length=50, null=True, verbose_name='Customer-Reference ')),
                ('incident_customer_support', models.CharField(max_length=300, verbose_name='Customer Support(Name | Tel)')),
                ('incident_problem_start', models.DateTimeField(verbose_name='Problem Start')),
                ('incident_problem_end', models.DateTimeField(blank=True, null=True, verbose_name='Problem End')),
                ('incident_description', models.TextField(verbose_name='Problem Summary')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Update At')),
            ],
        ),
        migrations.CreateModel(
            name='Incident_Severity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('severity_level', models.IntegerField(verbose_name='Severity Level')),
                ('severity_name', models.CharField(max_length=50, verbose_name='Severity Description')),
            ],
        ),
        migrations.CreateModel(
            name='Incident_Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('incident_status_name', models.CharField(max_length=50, verbose_name='Incident Status')),
            ],
        ),
        migrations.CreateModel(
            name='Product_Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('productype_name', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['productype_name'],
            },
        ),
        migrations.CreateModel(
            name='SLA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sla_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='XYZ_TestData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('my_title', models.CharField(max_length=255, verbose_name='XYZ Title')),
                ('my_date', models.DateField(verbose_name='XYZ Date')),
                ('my_date_time', models.DateTimeField(verbose_name='XYZ DateTime')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_team_name', models.CharField(max_length=50, verbose_name='Service Team Name ')),
                ('service_team_telephone', models.CharField(default='-', max_length=255, verbose_name='Service Team Telephone')),
                ('service_team_email', models.CharField(default='-', max_length=150, verbose_name='Service Team Email')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.company', verbose_name='Company Name')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enq_id', models.CharField(max_length=100, unique=True, verbose_name='ENQ')),
                ('project_name', models.CharField(max_length=255, verbose_name='Project Name')),
                ('customer_po', models.CharField(max_length=255, verbose_name='Customer PO')),
                ('is_dummy', models.BooleanField(default=False, verbose_name='Is Dummy')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Update At')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.company')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=255, verbose_name='Product-Supporter Name')),
                ('product_telephone', models.CharField(default='-', max_length=255, verbose_name='Product-Supporter Telephone')),
                ('product_email', models.CharField(default='-', max_length=150, verbose_name='Product-Supporter Email')),
                ('is_active', models.BooleanField(default=True)),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Update At')),
                ('customer_company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer_company', to='app.company', verbose_name='Customer-Company')),
                ('partner_company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='partner_company', to='app.company', verbose_name='Partner-Company')),
            ],
        ),
        migrations.CreateModel(
            name='Model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('model_description', models.CharField(default='', max_length=500)),
                ('model_updated_at', models.DateTimeField(auto_now=True, verbose_name='Update At')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.brand')),
            ],
            options={
                'ordering': ['model_name'],
            },
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manager_nickname', models.CharField(max_length=100, verbose_name='Nick Name')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['manager_nickname'],
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.CharField(max_length=50, verbose_name='Serial No')),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='QTY')),
                ('customer_warranty_start', models.DateField(verbose_name='Cust-Start')),
                ('customer_warranty_end', models.DateField(verbose_name='Cust-End')),
                ('yit_warranty_start', models.DateField(verbose_name='Yit-Start')),
                ('yit_warranty_end', models.DateField(verbose_name='Yit-End')),
                ('product_warranty_start', models.DateField(verbose_name='Product-Start')),
                ('product_warranty_end', models.DateField(verbose_name='Product-End')),
                ('devicename_hostname', models.CharField(blank=True, max_length=100, null=True, verbose_name='Device Host Name')),
                ('device_hs_version', models.CharField(blank=True, max_length=50, null=True, verbose_name='Device-Vers(HW/SW)')),
                ('floor', models.CharField(blank=True, max_length=30, null=True, verbose_name='Floor')),
                ('room', models.CharField(blank=True, max_length=30, null=True, verbose_name='Room')),
                ('rack_position', models.CharField(blank=True, max_length=30, null=True, verbose_name='Rack Position')),
                ('rack_unit', models.CharField(blank=True, max_length=50, null=True, verbose_name='Rack Unit')),
                ('install_date', models.DateField(blank=True, null=True, verbose_name='Install Date')),
                ('eos_date', models.DateField(blank=True, null=True, verbose_name='EOS Date')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Address')),
                ('username', models.CharField(blank=True, max_length=30, null=True, verbose_name='User Name')),
                ('password', models.CharField(blank=True, max_length=30, null=True, verbose_name='Password')),
                ('backup_solution', models.CharField(blank=True, max_length=255, null=True, verbose_name='Backup Solution')),
                ('remark', models.TextField(blank=True, null=True, verbose_name='Remark/Note')),
                ('is_dummy', models.BooleanField(default=False, verbose_name='Is Dummy')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Update At')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.branch', verbose_name='Branch')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.brand', verbose_name='Brand')),
                ('cm_serviceteam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cm_serviceteam', to='app.serviceteam', verbose_name='Yit CM-Team')),
                ('customer_pm_support', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customer_pm_support', to='app.customer', verbose_name='Customer-PM Support')),
                ('customer_sla', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer_sla', to='app.sla', verbose_name='Cust-SLA')),
                ('customer_support', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer_support', to='app.customer', verbose_name='Customer Support')),
                ('datacenter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.datacenter', verbose_name='DataCenter')),
                ('function', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.function', verbose_name='Function')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.model', verbose_name='Model')),
                ('pm_serviceteam', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pm_serviceteam', to='app.serviceteam', verbose_name='Yit PM-Team')),
                ('product_sla', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_sla', to='app.sla', verbose_name='Product-SLA')),
                ('product_support', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.product', verbose_name='Product-Partner Support')),
                ('product_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.product_type', verbose_name='Product Type')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.project', verbose_name='Project')),
                ('yit_sla', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='yit_sla', to='app.sla', verbose_name='Yit-SLA')),
            ],
        ),
        migrations.CreateModel(
            name='Incident_File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('incident_file', models.FileField(blank=True, max_length=254, upload_to=app.models.incident_directory_path, verbose_name='Upload File')),
                ('incident_ref', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='files', to='app.incident')),
            ],
        ),
        migrations.CreateModel(
            name='Incident_Detail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_start', models.DateTimeField(verbose_name='Task Start')),
                ('task_end', models.DateTimeField(blank=True, null=True, verbose_name='Task End')),
                ('workaround_resolution', models.TextField(verbose_name='Resolution Description')),
                ('reference_product_caseNo', models.CharField(blank=True, max_length=30, null=True, verbose_name='ReferProduct-No')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Update At')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.employee', verbose_name='Engineer')),
                ('incident_master', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.incident', verbose_name='Incident')),
                ('service_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.serviceteam', verbose_name='Service Team')),
            ],
        ),
        migrations.AddField(
            model_name='incident',
            name='incident_severity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.incident_severity', verbose_name='Severity Level'),
        ),
        migrations.AddField(
            model_name='incident',
            name='incident_status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.incident_status', verbose_name='Incident Status'),
        ),
        migrations.AddField(
            model_name='incident',
            name='inventory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.inventory', verbose_name='Inventory'),
        ),
        migrations.AddField(
            model_name='company',
            name='manager',
            field=models.ManyToManyField(to='app.Manager'),
        ),
        migrations.AddField(
            model_name='branch',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.company'),
        ),
        migrations.AddField(
            model_name='branch',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.customer', verbose_name='Customer Support'),
        ),
    ]
